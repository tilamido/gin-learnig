version: '3.8'
services:
  mysql:
    container_name: mysql
    build:
      context: ./mysql
      dockerfile: Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: socialDB
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "39001:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 3s
      retries: 3

  redis:
    container_name: redis
    image: redis:alpine
    volumes:
      - redis-data:/data
    ports:
      - "39002:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: 123456
    ports:
      - "39003:5672"      
      - "39004:15672"   
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 3s
      retries: 3
    restart: unless-stopped

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "39006:8080"
    environment:
      DB_CONNECTION_STRING: "root:123456@tcp(mysql:3306)/socialDB?charset=utf8mb4&parseTime=true&loc=Local"
      REDIS_HOST: "redis:6379"
      RABBITMQ_URL: "amqp://root:123456@rabbitmq:5672/"
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy

  web:
    container_name: frontend
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "39007:80"
    environment:
      API_HOST: "http://8.134.249.207:39006"
    depends_on:
      - backend

volumes:
  mysql-data:
  redis-data:
  rabbitmq-data:

